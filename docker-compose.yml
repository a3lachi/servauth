services:
  postgres:
    image: postgres:16-alpine
    container_name: auth-postgres
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: myuser123
      POSTGRES_DB: servauth
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - auth-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d servauth"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-server:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: auth-server
    environment:
      PORT: 3000
      NODE_ENV: production
      DATABASE_URL: postgresql://myuser:myuser123@postgres:5432/servauth
      BETTER_AUTH_SECRET: ${BETTER_AUTH_SECRET:-change-this-secret-in-production}
      BETTER_AUTH_URL: ${BETTER_AUTH_URL:-http://localhost:3000}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - auth-network
    restart: unless-stopped
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        sleep 5 &&
        echo 'Starting server without migrations for now...' &&
        bun run start
      "

volumes:
  postgres_data:

networks:
  auth-network:
    driver: bridge